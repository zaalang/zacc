name: CI

on: [push, pull_request]

jobs:
  build_linux_gcc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create Build Environment
        run: |
          sudo wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-15 main"
          sudo apt-get install -y gcc-12 llvm-15
          cmake -E make_directory ${{github.workspace}}/build
      - name: Configure
        env:
          CC: gcc-12
          CXX: g++-12
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release ..
      - name: Build
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          cmake --build . --target install
  build_linux_clang:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create Build Environment
        run: |
          sudo wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-15 main"
          sudo apt-get install -y clang-15 llvm-15
          cmake -E make_directory ${{github.workspace}}/build
      - name: Configure
        env:
          CC: clang-15
          CXX: clang++-15
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release ..
      - name: Build
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          cmake --build . --target install
  build_windows_msvc:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: llvm
          key: llvm-libs-15.0.6
      - name: Download LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          iwr https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.6/llvm-project-15.0.6.src.tar.xz -OutFile llvm.tar.xz
          7z x llvm.tar.xz
          7z x llvm.tar
          mv llvm-* llvm-project
      - name: Build LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        working-directory: ${{github.workspace}}/llvm-project/llvm
        run: |
          cmake -E make_directory ${{github.workspace}}/llvm
          cmake -Thost=x64 -DLLVM_TARGETS_TO_BUILD="host" -DBUILD_SHARED_LIBS=OFF -DCMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH=OFF -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/llvm .
          cmake --build . --target install --config Release
      - name: Create Build Environment
        run: |
          cmake -E make_directory ${{github.workspace}}/build
      - name: Configure
        working-directory: ${{github.workspace}}/build
        run: |
          cmake -Thost=x64 -DLLVM_DIR=${{github.workspace}}/llvm/lib/cmake/llvm ..
      - name: Build
        working-directory: ${{github.workspace}}/build
        run: |
          cmake --build . --target install --config Release
